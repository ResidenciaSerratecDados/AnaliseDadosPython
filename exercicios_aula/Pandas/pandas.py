# -*- coding: utf-8 -*-
"""pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Wmpx8Ghr6GOpuD4mD7ceQNfGiu0welCy
"""

import pandas as pd

serie = pd.Series([10, 20, 30]) #estrutura unidimensional - vetor
print(serie)

dados = {
    'nome': ['Ana', 'Bia', 'Carlos'],
    'idade': [30, 10, 18]
}
df = pd.DataFrame(dados) #estrutura bidimensional - matriz
print(df)

ler_base = pd.read_csv('/content/df_analise.csv', encoding='utf-8') # Ler o arquico CSV separado por virgulas
print(ler_base)

ler_base = pd.read_csv('df_analise.csv') # Ler o arquico CSV separado por virgulas
print(ler_base)

print(ler_base.head(2)) #imprime as 3 primeiras linhas

print(pd.DataFrame(ler_base)) #imprime todas linhas e colunas

ler_base = pd.read_csv('df_analise.csv', sep=';') # Ler o arquico CSV separado por virgulas em tabela
print(ler_base)#imprime tabela completa

print(ler_base.dropna())#remove todas as colunas com pelo menos 1 linha vazia

ler_base = ler_base.dropna(axis=1, how='all')#remove todas as colunas vazias
print(ler_base)

ler_base = ler_base.dropna()#imprime somente as linhas e colunas preenchidas
print(ler_base)

print(ler_base.describe())#imprime estatisticas descritivas

print(ler_base.loc[1])#imprimir item da 2ª linha

print(ler_base.loc[1, 'Nome'])#Nome da 2ª linha somente

print(ler_base.iloc[1, 2]) #Item localizado na 2ª linha e na 3ª coluna

print(ler_base.groupby('Nome').mean())#agrupamento poor nome

df = pd.DataFrame({
    'Departamento': ['TI', 'RH','TI', 'RH'],
    'Salario': [1000, 2000, 3000, 4000]
})
grupo = df.groupby('Departamento')
print(grupo.mean())
#Média salarial dos setores

merge, drop, fillna